<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserDAO">

	<!-- 아이디 중복체크 -->
	<select id="selectidcheck" parameterType="String" resultType="String">
		SELECT userid FROM user WHERE userid=#{userid}
	</select>

	<!-- 회원가입 -->
	<insert id="insertuser"	parameterType="com.ticketmvp.domain.UserVO">
		INSERT INTO user ( userid, userpw, email, joinstatus, name, admin, phone )
		VALUES( #{userid},  #{userpw}, #{email}, true, #{name}, false, #{phone} )
	</insert>
	
	<!-- 회원정보 확인(로그인가능한지) -->
	<select id="selectlogincheck" parameterType="com.ticketmvp.domain.UserVO" resultType="com.ticketmvp.domain.UserVO">
		SELECT * FROM user WHERE userid=#{userid} AND userpw=#{userpw}
	</select>

	<!-- 아이디 찾기(이메일이 일치하는게 있는지 확인) -->
	<select id='selectfindid' parameterType="String" resultType="String">
		SELECT userid FROM user WHERE email=#{email}
	</select>
	
	<!-- 비밀번호 찾기(1.입력한 아이디,이메일이 일치하는지 확인) -->
	<select id='selectfindpw' parameterType="com.ticketmvp.domain.UserVO" resultType="com.ticketmvp.domain.UserVO">
		SELECT * FROM user WHERE userid=#{userid} AND email=#{email}
	</select>
	
	<!-- 비밀번호 찾기(2.temppw 설정하기) -->
	<update id="updatesettemppw" parameterType="com.ticketmvp.domain.UserVO">
			UPDATE user SET temppw=#{temppw} WHERE userid=#{userid}
	</update>
	
	<!-- 비밀번호 찾기(3.인증번호 맞게 입력했는지 확인하기) -->
		<select id='selecttemppw' parameterType="com.ticketmvp.domain.UserVO" resultType="String">
		SELECT userid FROM user WHERE userid=#{userid} AND temppw=#{temppw}
	</select>
	
	<!-- 비밀번호 재설정 -->
	<update id='updatepw' parameterType="com.ticketmvp.domain.UserVO">
		UPDATE user SET userpw=#{userpw} where userid=#{userid}
	</update>

	<!-- 현재비밀번호 확인 -->
	<select id="selectpw" parameterType="com.ticketmvp.domain.UserVO" resultType="com.ticketmvp.domain.UserVO">
		SELECT * FROM user WHERE userid=#{userid} AND userpw=#{userpw}
	</select>
	
	<!-- 회원정보수정 비밀번호 제외 -->
	<update id="updatemodify_exceptpw" parameterType="com.ticketmvp.domain.UserVO">
		UPDATE user SET name=#{name}, email=#{email}, phone=#{phone} WHERE userid=#{userid}
	</update>
	
	<!-- 회원정보수정 비밀번호 포함 -->
	<update id="updatemodify_all" parameterType="com.ticketmvp.domain.UserVO">
		UPDATE user SET name=#{name}, userpw=#{userpw}, email=#{email}, phone=#{phone} WHERE userid=#{userid}
	</update>
	
	<!-- 회원탈퇴 -->
	<update id="updateelimination" parameterType="String">
		UPDATE user SET joinstatus=false WHERE userid=#{userid}
	</update>	

<!-- UserOrderVO 사용 -->

	<!-- 내 주문목록 -->
	<select id="selectmyorder" parameterType="String" resultType="com.ticketmvp.domain.UserOrderVO">
		SELECT * 
		FROM reservation 
		WHERE userid = #{userid}
		ORDER BY 	paydate DESC
					,totalpayment DESC
	</select>
	
	<!-- 주문목록에서 예매 취소 -->
	<!-- 취소 여부 확인 -->
	<select id="checkorderstatus" parameterType="String" resultType="com.ticketmvp.domain.UserOrderVO">
		SELECT * FROM reservation
		WHERE reserveid = #{orderid}
		AND reservestatus = '예약취소'
	</select>
	
	<!-- 쿠폰 회수 -->
	<update id="cancelordercoupon" parameterType="String">
		UPDATE coupon
		SET 	
			reserveid = NULL	
			,usestatus = NULL
			,usedate = NULL
		WHERE reserveid = #{orderid}
	</update>
	
	<!-- 예매좌석에서 예매 번호 없애기 -->
	<update id="cancelorderseat" parameterType="String">
		UPDATE seat 
		SET
			reserveid = NULL	
		WHERE reserveid = #{orderid}
	</update>
	
	<!-- 티켓테이블에서 남은 수량 회복 -->
	<update id="updateticket" parameterType="hashmap">
		UPDATE ticket
		SET ticketremain = ticketremain + ${totalseat}
		WHERE ticketname = '${ticketname}'
	</update>
	
	<!-- 예매 테이블에서 예매  -->
	<update id="cancelorderreservation" parameterType="String">
		UPDATE reservation
		SET
			reservestatus = '예약취소'
		WHERE reserveid = #{orderid}
	</update>
	
	<!-- 문의하기 리스트 -->
	<select id="selectmyInquiry" parameterType="String" resultType="com.ticketmvp.domain.UserInquiryVO" >
		SELECT helptitle, helptext, helpproduct, helpdate, replytext, replydate, userid FROM help WHERE	userid=#{userid}
	</select>
		
	<select id="selectInquiry" parameterType="String" resultType="com.ticketmvp.domain.UserInquiryVO" >
		SELECT helpid, helptitle, helptext, helpproduct, helpdate, replytext, replydate, userid FROM help ORDER BY helpid DESC;
	</select>
	
	<!-- 문의하기 작성 -->
	<insert id="insertinquiryinsert" parameterType="com.ticketmvp.domain.UserInquiryVO" >
		INSERT INTO `help`(userid, helptitle, helptext, helpproduct, helpdate ) 
		VALUES ( #{userid}, #{helptitle}, #{helptext}, #{helpproduct}, now() )
	</insert>


	<!-- 문의하기 글 상세 -->
	<select id="selectInquiryview" parameterType="integer" resultType="com.ticketmvp.domain.UserInquiryVO" >
		SELECT helpid, userid, helptitle, helptext, helpproduct, helpdate, replytext, replydate FROM help WHERE helpid=#{helpid}
	</select>

	<!-- 문의하기 글삭제 -->
	<delete id="deleteInquiry" parameterType="integer">
		DELETE FROM help WHERE helpid=#{helpid}
	</delete>

	<!-- 찜목록 리스트 -->
	<select id="selectmylike" parameterType="String" resultType="com.ticketmvp.domain.UserLikeVO">
		SELECT l.userid as 'userid', l.matchid as 'matchid', homeclub, awayclub, matchdate, matchtime
		FROM `like` l JOIN `match` m 
		ON l.matchid = m.matchid
		WHERE l.userid = #{userid};
	</select> 

	<!-- 내쿠폰 리스트 -->
	<select id="selectmycoupon" parameterType="String" resultType="com.ticketmvp.domain.UserCouponVO">
		SELECT couponid, userid, reserveid, couponname, discount, issuedate, expiredate, usestatus, usedate
		FROM coupon
		WHERE userid=#{userid}
	</select>

	<!-- 쿠폰 소유자 등록하기 -->
	<update id="updatemycoupon" parameterType="com.ticketmvp.domain.UserCouponVO">
		UPDATE coupon SET userid=#{userid} WHERE couponid=#{couponid}
	</update>

	<!-- 찜 목록에서 찜 삭제 -->
	<delete id="removeLike" parameterType="hashmap">
		DELETE FROM `like` WHERE userid = '${userId}' AND matchid = ${matchId}
	</delete>

</mapper>